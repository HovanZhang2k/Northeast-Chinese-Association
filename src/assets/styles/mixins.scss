// 弹性布局
@mixin flex($direction: row, $justify: flex-start, $align: stretch) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

// 响应式断点
@mixin respond-to($breakpoint) {
  @if $breakpoint == 'sm' {
    @media screen and (max-width: 576px) { @content; }
  }
  @else if $breakpoint == 'md' {
    @media screen and (max-width: 768px) { @content; }
  }
  @else if $breakpoint == 'lg' {
    @media screen and (max-width: 992px) { @content; }
  }
  @else if $breakpoint == 'xl' {
    @media screen and (max-width: 1200px) { @content; }
  }
}

// 文本溢出省略
@mixin text-ellipsis($lines: 1) {
  @if $lines == 1 {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

// 渐变背景
@mixin gradient-bg($direction: to right, $start-color: var(--primary-color), $end-color: var(--secondary-color)) {
  background: linear-gradient($direction, $start-color, $end-color);
}

// 阴影效果
@mixin box-shadow($level: 1) {
  @if $level == 1 {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  } @else if $level == 2 {
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  } @else if $level == 3 {
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
  }
}

// 过渡动画
@mixin transition($properties: all, $duration: 0.3s, $timing: ease) {
  transition: $properties $duration $timing;
}

// 清除浮动
@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// 绝对定位居中
@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// 按钮样式
@mixin button-style($bg-color: var(--primary-color), $text-color: white) {
  background-color: $bg-color;
  color: $text-color;
  border: none;
  padding: 0.5rem 1rem;
  border-radius: 4px;
  cursor: pointer;
  @include transition;
  
  &:hover {
    opacity: 0.9;
    transform: translateY(-2px);
  }
} 